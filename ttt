import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.dates as mdates
from datetime import timedelta

# Create the dataframe
data = {
    'ID': [111, 222, 333, 444, 555, 666, 777, 888, 999, 999],
    'NAME': ['Bob', 'Bob', 'Bob', 'Bob', 'Joe', 'Joe', 'Joe', 'Joe', 'Mike', 'Mike'],
    'DUE': ['1/1/24', '1/1/24', '1/1/24', '1/5/24', '3/6/24', '3/6/24', '3/6/24', '4/5/24', '9/6/24', '9/6/24'],
    'Type': ['AA', 'AA', 'BB', 'BB', 'BB', 'BB', 'AA', 'BB', 'BB', 'CC']
}

df = pd.DataFrame(data)

# Convert 'DUE' to datetime
df['DUE'] = pd.to_datetime(df['DUE'], format='%m/%d/%y')

# Sort the dataframe by DUE date and then by NAME
df = df.sort_values(['DUE', 'NAME'])

# Define colors for task types
color_map = {'AA': '#007681', 'BB': '#6ECEB2', 'CC': '#FDAA2F'}

# Create the horizontal bar chart
fig, ax = plt.subplots(figsize=(12, 8), facecolor='white')
fig.patch.set_facecolor('white')

# Set a common start date (let's use the earliest due date as the start)
start_date = df['DUE'].min()
end_date = df['DUE'].max()

y_ticks = []
for i, (index, row) in enumerate(df.iterrows()):
    duration = (row['DUE'] - start_date).days + 1  # +1 to make sure even same-day tasks have visible bars
    ax.barh(i, duration, left=0, height=0.6, color=color_map[row['Type']], alpha=0.8)
    y_ticks.append(f"{row['NAME']} - {row['Type']} (ID: {row['ID']})")
    
    # Add text label for ID
    ax.text(duration / 2, i, f"{row['ID']}", va='center', ha='center', color='white', fontweight='bold', fontsize=8)

# Customize the plot
ax.set_yticks(range(len(y_ticks)))
ax.set_yticklabels(y_ticks, fontsize=8)
ax.set_title('Task Duration from Start to Due Date', fontsize=14, fontweight='bold', color='#012169')

# Format x-axis to show dates
max_days = (end_date - start_date).days + 1
ax.set_xlim(0, max_days)

# Set up the date formatter
date_formatter = mdates.DateFormatter("%m/%d")  # Month/Day format
date_locator = mdates.WeekdayLocator(byweekday=mdates.MO)  # Locate Mondays

# Set x-axis ticks to show dates
ax.xaxis.set_major_locator(date_locator)
ax.xaxis.set_major_formatter(date_formatter)

# Set x-axis label
ax.set_xlabel('Due Date', fontsize=12, fontweight='bold', color='#012169')

# Remove spines
for spine in ax.spines.values():
    spine.set_visible(False)

# Add gridlines
ax.xaxis.grid(True, linestyle=':', alpha=0.7, color='#CCCCCC')

# Rotate and align the tick labels so they look better
fig.autofmt_xdate(rotation=45, ha='right')

# Add legend
legend_elements = [plt.Rectangle((0,0),1,1, facecolor=color, edgecolor='none', alpha=0.8) for color in color_map.values()]
ax.legend(legend_elements, color_map.keys(), loc='lower right', title='Task Type')

plt.tight_layout()
plt.show()
