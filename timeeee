import pandas as pd
from datetime import datetime, timedelta
import pytz
import re

# Function to parse duration strings into timedelta or business day offset
def parse_duration(duration):
    if not isinstance(duration, str):
        return None  # Return None for invalid duration values

    # Dictionary to store the time values, including months and years
    time_values = {'y': 0, 'mo': 0, 'w': 0, 'd': 0, 'h': 0, 'm': 0}
    
    # Check if the duration is negative (past time)
    negative = False
    if duration.startswith('-'):
        negative = True
        duration = duration[1:]
    
    # Regex to extract numbers and their units (y: years, mo: months, w: weeks, d: days, h: hours, m: minutes)
    matches = re.findall(r'(\d+)(y|mo|w|d|h|m)', duration)
    
    for value, unit in matches:
        if unit == 'y':
            time_values['y'] = int(value)
        elif unit == 'mo':
            time_values['mo'] = int(value)
        elif unit == 'w':
            time_values['w'] = int(value)
        elif unit == 'd':
            time_values['d'] = int(value)
        elif unit == 'h':
            time_values['h'] = int(value)
        elif unit == 'm':
            time_values['m'] = int(value)
    
    # Get the current date
    current_date = pd.Timestamp.now(pytz.timezone('US/Pacific'))
    
    # Calculate total days (approximating months and years, but adjusting days and weeks for business days)
    days_in_year = 365
    days_in_month = 30
    total_days = time_values['y'] * days_in_year + time_values['mo'] * days_in_month
    
    # Adjust for business days (weeks and days)
    business_days = pd.offsets.BusinessDay(n=(time_values['w'] * 5 + time_values['d']))
    if negative:
        result_date = current_date - business_days
    else:
        result_date = current_date + business_days

    # Add years and months (approximate) after calculating business days
    result_date = result_date + pd.DateOffset(years=time_values['y'], months=time_values['mo'])
    
    # Adjust for hours and minutes
    result_date = result_date + timedelta(hours=time_values['h'], minutes=time_values['m'])
    
    return result_date

# Get the current date and time in PST
pst = pytz.timezone('US/Pacific')
now_pst = datetime.now(pst)

# Create a DataFrame with your data
data = {
    'ID': [111, 222, 333, 444, 555, 666, 777, 888, 999, 999
