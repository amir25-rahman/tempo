import pandas as pd
import numpy as np

# Example: your existing DataFrame
# df = pd.DataFrame({'ID': [...], 'Stage': [...]})

# Define the correct stage order mapping
stage_order = ['Arrival', 'Start', 'End', 'Complete', 'Deliver']

# Ensure Stage is ordered properly
df['Stage'] = pd.Categorical(df['Stage'], categories=stage_order, ordered=True)
df = df.sort_values(['ID', 'Stage'])

# Define random delay ranges between stages
delay_ranges = {
    'Arrival': (0, 0),        # Base delay = 0
    'Start': (1, 10),         
    'End': (5, 15),           
    'Complete': (2, 8),       
    'Deliver': (3, 20)        
}

# Set base time (e.g., 1:00 PM)
base_time = pd.to_datetime("13:00", format="%H:%M")

# Function to apply per group
def add_delays(group):
    cumulative_delay = 0
    delay_list = []
    time_list = []

    for stage in group['Stage']:
        min_d, max_d = delay_ranges[stage]
        delay = np.random.randint(min_d, max_d + 1)
        cumulative_delay += delay
        delay_list.append(0 if stage == 'Arrival' else cumulative_delay)
        time_list.append((base_time + pd.to_timedelta(0 if stage == 'Arrival' else cumulative_delay, unit='m')).strftime('%-I:%M %p'))

    group['Delay (min)'] = delay_list
    group['Actual Time'] = time_list
    return group

# Apply function per ID group
df = df.groupby('ID', group_keys=False).apply(add_delays)

# Final result
print(df)
