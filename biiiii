from selenium import webdriver
from selenium.webdriver.edge.service import Service
from selenium.webdriver.edge.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time

def export_power_bi_data(dashboard_url):
    # Configure Edge options
    edge_options = Options()
    
    # Optional: Add any necessary arguments
    edge_options.add_argument('--start-maximized')
    # Uncomment the next line if you want to run in headless mode
    # edge_options.add_argument('--headless')
    
    # Path to Microsoft Edge WebDriver
    # Replace with the actual path to your edgedriver if auto-detection fails
    service = Service()
    
    try:
        # Create the WebDriver instance
        driver = webdriver.Edge(service=service, options=edge_options)
        
        # Navigate to the dashboard
        driver.get(dashboard_url)
        
        # Wait for page to load (you might need to adjust this)
        time.sleep(10)
        
        # Find and click the ellipsis (...) menu
        # You may need to modify these selectors based on your specific dashboard
        ellipsis_buttons = driver.find_elements(By.XPATH, "//button[@aria-label='More options']")
        
        if ellipsis_buttons:
            ellipsis_buttons[0].click()
            print("Clicked ellipsis menu")
        else:
            print("No ellipsis menu found")
            return
        
        # Wait a moment
        time.sleep(2)
        
        # Find and click 'Export data'
        export_options = driver.find_elements(By.XPATH, "//div[contains(text(), 'Export data')]")
        
        if export_options:
            export_options[0].click()
            print("Clicked export data")
        else:
            print("Export data option not found")
            return
        
        # Wait for export options
        time.sleep(2)
        
        # Select CSV
        csv_options = driver.find_elements(By.XPATH, "//div[contains(text(), 'CSV')]")
        
        if csv_options:
            csv_options[0].click()
            print("Selected CSV export")
        else:
            print("CSV export option not found")
            return
        
        # Wait for download
        time.sleep(5)
        
        print("Data export process completed")
    
    except Exception as e:
        print(f"An error occurred: {e}")
    
    finally:
        # Close the browser
        driver.quit()

# Usage
if __name__ == "__main__":
    export_power_bi_data("YOUR_POWER_BI_DASHBOARD_URL")
