from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.edge.service import Service
from webdriver_manager.microsoft import EdgeChromiumDriverManager
import time

def export_power_bi_table_data(dashboard_url):
    """
    Export data from a Power BI dashboard table using Microsoft Edge
    
    :param dashboard_url: Full URL of the Power BI dashboard
    """
    # Setup Edge WebDriver
    options = webdriver.EdgeOptions()
    
    # Optional: If you want to keep the browser open after script completion
    # options.add_experimental_option("detach", True)
    
    # Initialize the WebDriver
    driver = webdriver.Edge(service=Service(EdgeChromiumDriverManager().install()), options=options)
    
    try:
        # Navigate to dashboard
        driver.get(dashboard_url)
        
        # Wait for page to load completely
        # Adjust the wait time and selector as needed
        WebDriverWait(driver, 20).until(
            EC.presence_of_element_located((By.XPATH, "//div[contains(@class, 'visual-container') or contains(@class, 'dashboard-container')]"))
        )
        
        # Additional wait to ensure everything is interactive
        time.sleep(5)
        
        # Find and click the ellipsis (...) menu on the table
        # You might need to adjust the XPATH based on your specific dashboard
        ellipsis_menu = WebDriverWait(driver, 10).until(
            EC.element_to_be_clickable((By.XPATH, "//button[@aria-label='More options']"))
        )
        ellipsis_menu.click()
        
        # Wait for dropdown menu
        time.sleep(1)
        
        # Click 'Export data'
        export_data_option = WebDriverWait(driver, 10).until(
            EC.element_to_be_clickable((By.XPATH, "//div[contains(text(), 'Export data')]"))
        )
        export_data_option.click()
        
        # Choose export format (e.g., CSV)
        time.sleep(2)
        csv_option = WebDriverWait(driver, 10).until(
            EC.element_to_be_clickable((By.XPATH, "//div[contains(text(), 'CSV')]"))
        )
        csv_option.click()
        
        print("Data export initiated successfully!")
        
        # Wait a bit for download to complete
        time.sleep(5)
    
    except Exception as e:
        print(f"An error occurred: {e}")
    
    finally:
        # Close the browser
        driver.quit()

# Example usage
if __name__ == "__main__":
    export_power_bi_table_data(
        dashboard_url="YOUR_POWER_BI_DASHBOARD_URL_HERE"
    )
